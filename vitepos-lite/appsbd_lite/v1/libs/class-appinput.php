<?php
/**
 * Its api for heartbit
 *
 * @since : 1
 * @author: appsbd
 * @package Appsbd\V1\libs
 */

namespace Appsbd_Lite\V1\libs;

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( ! class_exists( __NAMESPACE__ . '\AppInput' ) ) {
	/**
	 * Class AppInput
	 *
	 * @package Appsbd\V1\libs
	 */
	#[\AllowDynamicProperties]
	class AppInput {

		/**
		 * Its property __posted_data
		 *
		 * @var null
		 */
		protected static $__posted_data = null;

		/**
		 * Its property __posted_data
		 *
		 * @var null
		 */
		protected static $__request_data = null;

		/** Its property __posted_data
		 *
		 * @var null
		 */
		protected static $__get_data = null;
		/**
		 * Its property __app_data
		 *
		 * @var null
		 */
		protected static $__app_data = null;
		/**
		 * Its property _is_sanitized
		 *
		 * @var bool
		 */
		protected static $_is_sanitized = false;

		/**
		 * The sanitize all input data is generated by appsbd
		 */
		public static function sanitize_all_input_data() {
			/**
			 * Its for html field filter
			 *
			 * @since : 1.0
			 */
			$html_inputs = apply_filters( 'appsbd/input/html/fields', array() );
			if ( true || check_ajax_referer( 'vitepos' ) ) {
				self::$__posted_data = self::sanitize_array( self::$__posted_data, $html_inputs );
			}
			self::$__get_data     = self::sanitize_array( self::$__get_data, $html_inputs );
			self::$__request_data = self::sanitize_array( self::$__request_data, $html_inputs );
		}

		/**
		 * The GetPostedData is generated by appsbd
		 *
		 * @return array|null
		 */
		public static function get_posted_data() {
			return self::get_app_data( 'posted' );
		}

		/**
		 * The get request data is generated by appsbd
		 *
		 * @return array
		 */
		public static function get_request_data() {
			return self::get_app_data( 'req' );
		}

		/**
		 * The get app data is generated by appsbd
		 *
		 * @param mixed $type It is type param.
		 * @param mixed $name It is name param.
		 * @param mixed $default It is default param.
		 *
		 * @return mixed|string|null
		 */
		public static function get_app_data( $type = '', $name = '', $default = '' ) {
			if ( empty( $type ) ) {
				return self::$__app_data;
			}
			if ( empty( $name ) ) {
				if ( isset( self::$__app_data[ $type ] ) ) {
					return self::$__app_data[ $type ];
				}
			}
			if ( isset( self::$__app_data[ $type ][ $name ] ) ) {
				return self::$__app_data[ $type ][ $name ];
			}
			return $default;
		}

		/**
		 * The   callStatic is generated by appsbd
		 *
		 * @param mixed $method It is method param.
		 * @param mixed $args It is args param.
		 */
		public static function __callStatic( $method, $args ) {
			if ( is_array( $args ) && count( $args ) > 0 ) {
				self::$__app_data[ $method ] = $args[0];
			}
		}
		/**
		 * The post value is generated by appsbd
		 *
		 * @param any    $name Its name param.
		 * @param string $default Its default param.
		 *
		 * @return mixed|string
		 */
		public static function post_value( $name, $default = '' ) {
			return self::get_app_data( 'posted', $name, $default );
		}

		/**
		 * The get value is generated by appsbd
		 *
		 * @param any    $name Its name param.
		 * @param string $default Its default param.
		 */
		public static function get_value( $name, $default = '' ) {
			return self::get_app_data( 'got', $name, $default );
		}

		/**
		 * The get value is generated by appsbd
		 *
		 * @param mixed   $name Its name param.
		 * @param string  $default Its default param.
		 * @param boolean $xss_clean Its xss clean param.
		 *
		 * @return array|string
		 */
		public static function request_value( $name, $default = '', $xss_clean = true ) {
			if ( empty( $name ) || ! is_string( $name ) ) {
				return $default;
			}
			$req = self::get_request_data();
			if ( $xss_clean ) {
				if ( ! empty( $req ) && is_array( $req ) && isset( $req[ $name ] ) ) {
					return $req[ $name ];
				}
			} elseif ( isset( $req[ $name ] ) ) {
				return wp_unslash( $req[ $name ] );
			}

			return $default;
		}

		/**
		 * The set bool value is generated by appsbd
		 *
		 * @param any    $name Its name.
		 * @param string $true_value Its for true value.
		 * @param string $false_value Its for false value.
		 */
		public static function set_bool_value( $name, $true_value = 'Y', $false_value = 'N' ) {
			if ( ! isset( self::$__app_data['posted'] ) ) {
				return;
			}
			$data = &self::$__app_data['posted'];
			if ( isset( $data[ $name ] ) ) {
				if ( json_decode( $data[ $name ] ) || $data[ $name ] === $true_value ) {
					$data[ $name ] = $true_value;
				} else {
					$data[ $name ] = $false_value;
				}
			}
			$req = self::get_app_data( 'req' );
			if ( isset( $req[ $name ] ) ) {
				if ( json_decode( $req[ $name ] ) || $req[ $name ] === $true_value ) {
					$req[ $name ] = $true_value;
				} else {
					$req[ $name ] = $false_value;
				}
			}
		}

		/**
		 * The unset post value is generated by appsbd
		 *
		 * @param mixed $key Its key.
		 * @param mixed $data Its data.
		 */
		public static function update_post_value( $key, $data ) {
			if ( ! isset( self::$__app_data['posted'] ) ) {
				self::$__app_data['posted'] = array();
			}
			self::$__app_data['posted'][ $key ] = $data;
		}

		/**
		 * The unset post value is generated by appsbd
		 *
		 * @param mixed $key Its key.
		 * @param mixed $data Its data.
		 */
		public static function update_request_value( $key, $data ) {
			if ( ! isset( self::$__app_data['req'] ) ) {
				self::$__app_data['req'] = array();
			}
			self::$__app_data['req'][ $key ] = $data;
		}

		/**
		 * The unset post value is generated by appsbd
		 *
		 * @param mixed $key Its key.
		 */
		public static function unset_post_value( $key ) {
			if ( isset( self::$__app_data['posted'][ $key ] ) ) {
				unset( self::$__app_data['posted'][ $key ] );
			}
		}
		/**
		 * The unset post value is generated by appsbd
		 *
		 * @param mixed $key Its key.
		 */
		public static function unset_request_value( $key ) {
			if ( isset( self::$__app_data['req'][ $key ] ) ) {
				unset( self::$__app_data['req'][ $key ] );
			}
		}
		/**
		 * The unset post value is generated by appsbd
		 *
		 * @param mixed $key Its key.
		 */
		public static function unset_get_value( $key ) {
			//phpcs:ignore
			if ( isset( self::$__app_data['got'][ $key ] ) ) {
				unset( self::$__app_data['got'][ $key ] );
			}
		}
		/**
		 * The sanitize_array is generated by appsbd
		 *
		 * @param any    $var Its var param.
		 * @param array  $html_inputs Its htmlInputs param.
		 * @param string $key Its key param.
		 *
		 * @return array|string
		 */
		public static function sanitize_array( $var, $html_inputs = array(), $key = '' ) {
			if ( is_array( $var ) ) {
				foreach ( $var as $key => &$item ) {
					$item = self::sanitize_array( $item, $html_inputs, $key );
				}
				return $var;
			} elseif ( is_scalar( $var ) ) {
				if ( ! empty( $key ) && in_array( $key, $html_inputs ) ) {
					return wp_kses_post( $var );
				} else {
					return sanitize_text_field( $var );
				}
			} else {
				return $var;
			}
		}

		/**
		 * The get server array is generated by appsbd
		 *
		 * @return array
		 */
		public static function get_server_array() {
			return self::get_app_data( 'srv' );
		}

		/**
		 * The get server data is generated by appsbd
		 *
		 * @param any $index Its index param.
		 *
		 * @return mixed|null
		 */
		public static function get_server_data( $index ) {
			$server = self::get_server_array();
			if ( isset( $server[ $index ] ) ) {
				return $server[ $index ];
			}
			return null;
		}

		/**
		 * The is post back is generated by appsbd
		 *
		 * @return bool
		 */
		public static function is_post_back() {
			$method = self::get_server_data( 'REQUEST_METHOD' );
			return 'POST' == strtoupper( $method );
		}

		/**
		 * The getUploadedFiles is generated by appsbd
		 *
		 * @return array
		 */
		public static function &get_uploaded_files() {
			$files = array();
			return $files;
		}
	}
}
